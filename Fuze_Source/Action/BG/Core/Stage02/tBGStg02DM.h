// -------------------------------------------------------------------------- //
//! @file   tBGStg02DM.h
//! @brief  
//! @author Nal
//! @since  13/04/24(水)
//!
//! COPYRIGHT (C) 2013 EDELWEISS ALL RIGHT RESERVED
// -------------------------------------------------------------------------- //
#pragma	once
/* ====< インクルード >====================================================== */
#include "tBGStg02.h"

/* ========================================================================= */
//		DMBGStg02															 */
/* ========================================================================= */
class BGViewer;
class tBGStg02;

class DMBGStg02 : public TGL::DMenu
{
public:
	DMBGStg02( TGL::DMenuRoot* pRoot, BGViewer* pOwner, tBGStg02* pTask );
	virtual ~DMBGStg02();

public:
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------
	enum {
		//!	項目ID
		ITEMID_00 = 0,		//!< 
		ITEMID_MAX,
		
		//!	UV速度
		UVSPD_FAR01 = 0,	//!< 遠景01 星
		UVSPD_FAR02_A,		//!< 遠景02
		UVSPD_FAR02_B,		//!< 遠景02
		UVSPD_LOOP01_A,		//!< ループ01A
		UVSPD_LOOP01_B,		//!< ループ01B
		UVSPD_LOOP01_C,		//!< ループ01C
		UVSPD_LOOP01_D,		//!< ループ01D
		UVSPD_02_A,			//!< 02A
		UVSPD_02_B,			//!< 02B
		UVSPD_02_C,			//!< 02C
		UVSPD_02_D,			//!< 02D
		UVSPD_04_A,			//!< 04A
		UVSPD_04_B,			//!< 04B
		UVSPD_04_C,			//!< 04C
		UVSPD_04_D,			//!< 04D
		UVSPD_04_A2,		//!< 04A2
		UVSPD_04_B2,		//!< 04B2
		UVSPD_04_C2,		//!< 04C2
		UVSPD_04_D2,		//!< 04D2
		UVSPD_04_FAR,		//!< 04Far
		UVSPD_04_FAR2,		//!< 04Far2
		UVSPD_MAX,
	};

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------
	//!	セットアップ
	virtual void	setup();

	//!	更新
	virtual void	update();
	//!	項目更新
	virtual void	updateItem();
	//!	項目表示
	virtual void	dispItem( TGL::DMenuItem* pItem, bool bCurrent, RGBA32 uColor=0xFFFFFFFF );
	//!	表示判定
	virtual bool	isDisp() const	{ return !KBBTN_DAT(KBBTN_F3); }

	//		アクセサ		
	

private:
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------
	//!	UV値取得
	TGL::Vec2*	getTaskUV( u8 uId );

	// -----------------------------------------------------------------
	//		変数		
	// -----------------------------------------------------------------
	BGViewer*	mpOwner;		//!< オーナー
	tBGStg02*	mpTask;			//!< 背景タスク
};

/* ========================================================================= */
/*		EOF																	 */
/* ========================================================================= */
