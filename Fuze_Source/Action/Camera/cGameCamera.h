// -------------------------------------------------------------------------- //
//! @file   cGameCamera.h
//! @brief  ゲームカメラ
//! @author Nal
//! @since  12/10/09(火)
//!
//! COPYRIGHT (C) 2012 EDELWEISS ALL RIGHT RESERVED
// -------------------------------------------------------------------------- //
#pragma	once
/* ====< インクルード >====================================================== */

/* ========================================================================= */
//		GameCamera															 */
/* ========================================================================= */
class GameCamera : public TGL::PathCamera
{
public:
	GameCamera( u32 uFlag=FLAGS_DEFAULT, TGL::RenderTex* pRT=NULL );
	virtual ~GameCamera();

public:	
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------
	enum {
		VIEW_NORMAL = 0,	//!< 通常
		VIEW_BEHIND,		//!< ビハインド
		VIEW_TARBOSS,		//!< ボス注目
	};

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------
	//!	基準値に設定
	virtual void	adjust();

	//!	キャラクター注目
	void	adjustChr( const class tCharacter* pChr );
	
	//		アクセサ		
	u8		getViewMode() const		{ return mViewMode; }
	void	setViewMode( u8 i0 )	{ mViewMode = i0; }
	void	setBehindRoll( const TGL::Vec2& v0 )	{ mBehindRoll = v0; }
	
protected:
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------
	//!	派生クラスの更新
	virtual void	updateClass();
	//!	派生クラスの更新（フリービュー中も実行）
	virtual void	updateClass2();

	//!	ビハインド
	void	updateBehind();
	//!	ボス注目
	void	updateTarBoss();

	// -----------------------------------------------------------------
	//		変数		
	// -----------------------------------------------------------------
	u8				mViewMode;		//!< 視点モード
	u8				mViewModeOld;	//!< 前回の視点モード
	TGL::Vec2			mBehindRoll;	//!< ビハインド時
	TGL::TransFloat	mTargetRate;	//!< 注目率
};

/* ========================================================================= */
/*		EOF																	 */
/* ========================================================================= */
