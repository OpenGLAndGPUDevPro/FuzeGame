// -------------------------------------------------------------------------- //
//! @file   cUpdateEvent.h
//! @brief  更新イベント
//! @author Nal
//! @since  13/07/07(日)
//!
//! COPYRIGHT (C) 2013 EDELWEISS ALL RIGHT RESERVED
// -------------------------------------------------------------------------- //
#pragma	once
/* ====< インクルード >====================================================== */
#include "../Core/tBG.h"

/* ========================================================================= */
//		cUpdateEvent														 */
/* ========================================================================= */
class tBG;

class cUpdateEvent
{
public:
	//!	コンストラクタ
	cUpdateEvent( tBG& owner, void (*pUpdateCB)(tBG*,bool), s8 nSceneMin=-1, s8 nSceneMax=-1, void (*pSetupCB)(tBG*)=NULL, void (*pFinalCB)(tBG*)=NULL );
	//!	デストラクタ
	virtual ~cUpdateEvent();

public:	
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------
	//!	更新イベント 実行チェック
	bool	checkExec() const;
	//!	更新イベント
	void	exec();
	
	//		アクセサ	
	void	setSetupCB( void (*pCB)(tBG*) )			{ mpSetupCB = pCB; }
	void	setUpdateCB( void (*pCB)(tBG*,bool) )	{ mpUpdateCB = pCB; }
	void	setFinalCB( void (*pCB)(tBG*) )			{ mpFinalCB = pCB; }
	u8		getSceneMin() const						{ return mSceneMin; }
	void	setSceneMin( u8 i0 ) 					{ mSceneMin = i0; }
	u8		getSceneMax() const						{ return mSceneMax; }
	void	setSceneMax( u8 i0 ) 					{ mSceneMax = i0; }
	
private:
	// -----------------------------------------------------------------
	//		定義		
	// -----------------------------------------------------------------

	// -----------------------------------------------------------------
	//		関数		
	// -----------------------------------------------------------------

	// -----------------------------------------------------------------
	//		変数		
	// -----------------------------------------------------------------
	tBG&	mOwner;			//!< オーナー
	void	(*mpSetupCB)(tBG*);			//!< 初期化処理コールバック
	void	(*mpUpdateCB)(tBG*, bool);	//!< 更新コールバック
	void	(*mpFinalCB)(tBG*);			//!< 終了処理コールバック
	s8		mSceneMin;		//!< 更新シーン範囲
	s8		mSceneMax;		//!< 更新シーン範囲
	bool	mbExec;			//!< 処理を行った
};

/* ========================================================================= */
/*		EOF																	 */
/* ========================================================================= */
